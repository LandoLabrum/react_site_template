{"version":3,"sources":["logo.svg","elements/Nav.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","alignLinks","brand","className","style","paddingRight","href","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","to","Div","props","Main","this","nav","render","name","React","Component","NoMatchExample","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0LAAe,I,oDCIA,SAASA,IACtB,OACE,eAAC,SAAD,CACEC,WAAW,OACXC,MAAO,mBAAGC,UAAU,QAAQC,MAAO,CAACC,aAAc,QAASC,KAAK,IAAzD,kBACPC,GAAG,aACHC,SAAU,cAAC,OAAD,mBACVC,QAAS,CACPC,WAAW,EACXC,KAAM,OACNC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,IACbC,kBAAkB,GAdtB,UAiBE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,yCACA,cAAC,IAAD,CAAMA,GAAG,cAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,sB,qBCpBN,SAASC,EAAIC,GACX,OAAO,iD,IAIYC,E,4JACnB,WACE,OAAIC,KAAKF,MAAMG,IACN,iCACL,cAAC,IAAD,CAAOC,OAAQF,KAAKF,MAAMK,OAC1B,cAAC1B,EAAD,IACA,cAAC,YAAD,UACE,cAAC,MAAD,UACE,cAAC,MAAD,UACE,6BAAKuB,KAAKF,MAAMK,gBAMnB,iCACL,cAAC,IAAD,CAAOD,OAAQF,KAAKF,MAAMK,OAC1B,cAAC,YAAD,UACI,cAAC,MAAD,UACE,cAAC,MAAD,UACE,6BAAKH,KAAKF,MAAMK,aAIxB,cAACN,EAAD,W,GAxB4BO,IAAMC,WCWzB,SAASC,IACtB,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAML,KAAK,OAAOF,KAAK,MAEzB,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CAAML,KAAK,QAAQF,KAAK,MAE1B,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUZ,GAAG,eClCzB,IAYea,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e56d35f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// import React from 'react';\nimport { Navbar, NavItem, Icon } from 'react-materialize';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <Navbar\n      alignLinks=\"left\"\n      brand={<a className=\"right\" style={{paddingRight: \"10px\"}} href=\"#\">Logo</a>}\n      id=\"mobile-nav\"\n      menuIcon={<Icon>menu</Icon>}\n      options={{\n        draggable: true,\n        edge: 'left',\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        outDuration: 200,\n        preventScrolling: true\n      }}\n    >\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/old-match\">Old Match, to be redirected</Link>\n      <Link to=\"/will-match\">Will Match</Link>\n      <Link to=\"/about\">About</Link>\n    </Navbar>\n  );\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-materialize';\nimport Nav from '../elements/Nav'\nimport Title, { flushTitle } from 'reactjs-title'\n\n\nfunction Div(props) {\n  return <h1>Please sign up.</h1>;\n}\n\n\nexport default class Main extends React.Component {\n  render() {\n    if (this.props.nav) {\n      return <span>\n        <Title render={this.props.name}/>\n        <Nav />\n        <Container>\n          <Row>\n            <Col>\n              <h1>{this.props.name}</h1>\n            </Col>\n          </Row>\n        </Container>\n      </span>;\n    }\n    return <span>\n      <Title render={this.props.name}/>\n      <Container>\n          <Row>\n            <Col>\n              <h1>{this.props.name}</h1>\n            </Col>\n          </Row>\n        </Container>\n      <Div />\n    </span>;\n  }\n}\n\n","import React from \"react\";\nimport {\nBrowserRouter as Router,\nRoute,\nLink,\nSwitch,\nRedirect,\nuseLocation\n} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './styles/App.css';\nimport Main from './pages/Main'\n\n// You can use the last <Route> in a <Switch> as a kind of\n// \"fallback\" route, to catch 404 errors.\n//\n// There are a few useful things to note about this example:\n//\n// - A <Switch> renders the first child <Route> that matches\n// - A <Redirect> may be used to redirect old URLs to new ones\n// - A <Route path=\"*> always matches\n\nexport default function NoMatchExample() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Main name=\"Home\" nav={true}/>\n          </Route>\n          <Route exact path=\"/About\">\n            <Main name=\"About\" nav={true}/>\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction WillMatch() {\n  return <h3>Matched!</h3>;\n}\n\nfunction NoMatch() {\n  let location = useLocation();\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n{/* <Route path=\"/old-match\">\n<Redirect to=\"/will-match\" />\n</Route>\n<Route path=\"/will-match\">\n<WillMatch />\n</Route> */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport M from 'materialize-css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}